op memory = CPYFE|CPYFP|CPYFM|CPYFEN|CPYFPN|CPYFMN|CPYFERN|CPYFPRN|CPYFMRN|CPYFERT|CPYFPRT|CPYFMRT|CPYFERTN|CPYFPRTN|CPYFMRTN|CPYFERTRN|CPYFPRTRN|CPYFMRTRN|CPYFERTWN|CPYFPRTWN|CPYFMRTWN|CPYFET|CPYFPT|CPYFMT|CPYFETN|CPYFPTN|CPYFMTN|CPYFETRN|CPYFPTRN|CPYFMTRN|CPYFETWN|CPYFPTWN|CPYFMTWN|CPYFEWN|CPYFPWN|CPYFMWN|CPYFEWT|CPYFPWT|CPYFMWT|CPYFEWTN|CPYFPWTN|CPYFMWTN|CPYFEWTRN|CPYFPWTRN|CPYFMWTRN|CPYFEWTWN|CPYFPWTWN|CPYFMWTWN|CPYE|CPYP|CPYM|CPYEN|CPYPN|CPYMN|CPYERN|CPYPRN|CPYMRN|CPYERT|CPYPRT|CPYMRT|CPYERTN|CPYPRTN|CPYMRTN|CPYERTRN|CPYPRTRN|CPYMRTRN|CPYERTWN|CPYPRTWN|CPYMRTWN|CPYET|CPYPT|CPYMT|CPYETN|CPYPTN|CPYMTN|CPYETRN|CPYPTRN|CPYMTRN|CPYETWN|CPYPTWN|CPYMTWN|CPYEWN|CPYPWN|CPYMWN|CPYEWT|CPYPWT|CPYMWT|CPYEWTN|CPYPWTN|CPYMWTN|CPYEWTRN|CPYPWTRN|CPYMWTRN|CPYEWTWN|CPYPWTWN|CPYMWTWN |
    CSDB | DGH | DMB | DSB | loads | loads_atomic | other_mem | store_atomics

macro PEM(op1) = \
    if op1 == 2 then "e" \
    else if op1 == 1 then "m" \
    else if op1 == 0 then "p" \
    else "??" \
    endif endif endif

macro PEMBit(op1) = op1


op CPYFE(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfe [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 0 0 0 0 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFP(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfp [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 0 0 0 0 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFM(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfm [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 0 0 0 0 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFEN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfen [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 1 1 0 0 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFPN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfpn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 1 1 0 0 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFMN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfmn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 1 1 0 0 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFERN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfern [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 1 0 0 0 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFPRN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfprn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 1 0 0 0 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFMRN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfmrn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 1 0 0 0 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFERT(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfert [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 0 0 1 0 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFPRT(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfprt [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 0 0 1 0 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFMRT(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfmrt [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 0 0 1 0 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFERTN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfertn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 1 1 1 0 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFPRTN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfprtn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 1 1 1 0 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFMRTN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfmrtn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 1 1 1 0 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFERTRN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfertrn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 1 0 1 0 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFPRTRN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfprtrn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 1 0 1 0 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFMRTRN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfmrtrn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 1 0 1 0 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFERTWN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfertwn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 0 1 1 0 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFPRTWN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfprtwn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 0 1 1 0 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFMRTWN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfmrtwn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 0 1 1 0 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFET(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfet [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 0 0 1 1 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFPT(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfpt [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 0 0 1 1 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFMT(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfmt [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 0 0 1 1 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFETN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfetn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 1 1 1 1 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFPTN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfptn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 1 1 1 1 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFMTN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfmtn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 1 1 1 1 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFETRN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfetrn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 1 0 1 1 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFPTRN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfptrn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 1 0 1 1 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFMTRN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfmtrn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 1 0 1 1 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFETWN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfetwn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 0 1 1 1 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFPTWN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfptwn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 0 1 1 1 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFMTWN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfmtwn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 0 1 1 1 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFEWN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfewn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 0 1 0 0 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFPWN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfpwn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 0 1 0 0 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFMWN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfmwn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 0 1 0 0 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFEWT(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfewt [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 0 0 0 1 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFPWT(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfpwt [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 0 0 0 1 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFMWT(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfmwt [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 0 0 0 1 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFEWTN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfewtn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 1 1 0 1 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFPWTN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfpwtn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 1 1 0 1 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFMWTN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfmwtn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 1 1 0 1 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFEWTRN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfewtrn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 1 0 0 1 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFPWTRN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfpwtrn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 1 0 0 1 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFMWTRN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfmwtrn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 1 0 0 1 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFEWTWN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfewtwn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 0 1 0 1 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFPWTWN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfpwtwn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 0 1 0 1 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYFMWTWN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyfmwtwn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 %2b 0 %s 0 1 0 1 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYE(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpye [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 0 0 0 0 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYP(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyp [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 0 0 0 0 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYM(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpym [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 0 0 0 0 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYEN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyen [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 1 1 0 0 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYPN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpypn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 1 1 0 0 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYMN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpymn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 1 1 0 0 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYERN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyern [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 1 0 0 0 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYPRN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyprn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 1 0 0 0 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYMRN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpymrn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 1 0 0 0 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYERT(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyert [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 0 0 1 0 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYPRT(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyprt [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 0 0 1 0 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYMRT(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpymrt [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 0 0 1 0 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYERTN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyertn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 1 1 1 0 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYPRTN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyprtn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 1 1 1 0 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYMRTN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpymrtn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 1 1 1 0 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYERTRN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyertrn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 1 0 1 0 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYPRTRN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyprtrn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 1 0 1 0 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYMRTRN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpymrtrn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 1 0 1 0 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYERTWN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyertwn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 0 1 1 0 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYPRTWN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyprtwn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 0 1 1 0 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYMRTWN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpymrtwn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 0 1 1 0 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYET(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyet [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 0 0 1 1 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYPT(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpypt [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 0 0 1 1 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYMT(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpymt [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 0 0 1 1 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYETN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyetn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 1 1 1 1 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYPTN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyptn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 1 1 1 1 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYMTN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpymtn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 1 1 1 1 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYETRN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyetrn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 1 0 1 1 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYPTRN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyptrn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 1 0 1 1 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYMTRN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpymtrn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 1 0 1 1 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYETWN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyetwn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 0 1 1 1 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYPTWN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyptwn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 0 1 1 1 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYMTWN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpymtwn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 0 1 1 1 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYEWN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyewn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 0 1 0 0 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYPWN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpypwn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 0 1 0 0 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYMWN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpymwn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 0 1 0 0 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYEWT(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyewt [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 0 0 0 1 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYPWT(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpypwt [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 0 0 0 1 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYMWT(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpymwt [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 0 0 0 1 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYEWTN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyewtn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 1 1 0 1 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYPWTN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpypwtn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 1 1 0 1 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYMWTN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpymwtn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 1 1 0 1 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYEWTRN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyewtrn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 1 0 0 1 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYPWTRN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpypwtrn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 1 0 0 1 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYMWTRN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpymwtrn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 1 0 0 1 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYEWTWN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpyewtwn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 0 1 0 1 0 1 %s %s",sz,2,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYPWTWN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpypwtwn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 0 1 0 1 0 1 %s %s",sz,0,Rs.image,Rn.image,Rd.image)
    action = {
    }

op CPYMWTWN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("cpymwtwn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 %2b 0 %s 0 1 0 1 0 1 %s %s",sz,1,Rs.image,Rn.image,Rd.image)
    action = {
    }


op CSDB()
    syntax = "csdb"
    image = "1 1 0 1 0 1 0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0 1 0 1 0 0 1 1 1 1 1"
    action = {
        //ConsumptionOfSpeculativeDataBarrier();
    }

op DGH()
    syntax = "dgh"
    image = "1 1 0 1 0 1 0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0 0 0 1 1 0 1 1 1 1 1"
    action = {
    }

op DMB(CRm:u4)
    syntax = format("dmb  #%d", CRm)
    image = format("1 1 0 1 0 1 0 1 0 0 0 0 0 0 1 1 0 0 1 1 %4b 1 0 1 1 1 1 1 1", CRm)
    action = {
    }

op DSB(CRm:u4)
    syntax = format("dsb  #%d", CRm)
    image = format("1 1 0 1 0 1 0 1 0 0 0 0 0 0 1 1 0 0 1 1 %4b 1 0 0 1 1 1 1 1", CRm)
    action = {
    }

op ISB(CRm:u4)
    syntax = format("isb  #%d", CRm)
    image = format("1 1 0 1 0 1 0 1 0 0 0 0 0 0 1 1 0 0 1 1 %4b 1 1 0 1 1 1 1 1", CRm)
    action = {
    }

op loads = LD64B | LDADDB | LDADDH | LDADD | LDAPR | LDAPRB | LDAPRH | LDAPUR | LDAPURB | LDAPURH | LDAPURSB | LDAPURSH | LDAPURSW |
    LDAR | LDARB | LDARH | LDAXP | LDAXR | LDAXRB | LDAXRH | LDCLRB | LDCLRH | LDCLR | LDEORB | LDEORH | LDEOR | LDG | LDGM | LDLARB | LDLARH | LDLAR  | LDNP | LDP_postindex | LDP_preindex | LDP_signedoffset | LDPSW_postindex | LDPSW_preindex | LDPSW_signedoffset |  LDR_immediate_postindex | LDR_immediate_preindex | LDR_immediate_unsignedoffset | LDR_literal | LDR_register | LDRAA | LDRAB | LDRB_immediate_postindex | LDRB_immediate_preindex | LDRB_immediate_unsignedoffset | LDRB_register | LDRH_immediate_postindex | LDRH_immediate_preindex | LDRH_immediate_unsignedoffset | LDRH_register | LDRSB_immediate_postindex | LDRSB_immediate_preindex | LDRSB_immediate_unsignedoffset | LDRSB_register | LDRSH_immediate_postindex | LDRSH_immediate_preindex | LDRSH_immediate_unsignedoffset | LDRSH_register | LDRSW_immediate_postindex | LDRSW_immediate_preindex | LDRSW_immediate_unsignedoffset | LDRSW_literal | LDRSW_register | LDTR | LDTRB | LDTRH | LDTRSB | LDTRSH | LDTRSW | LDUR | LDURB | LDURH | LDURSB | LDURSH | LDURSW | LDXP | LDXR | LDXRB | LDXRH

op LD64B(Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ld64b %s, [%s]", get64Reg(Rt), get64RegoSP(Rn))
    image = format("1 1 1 1 1 0 0 0 0 0 1 1 1 1 1 1 1 1 0 1 0 0 %s%s", Rn.image, Rt.image)
    action = {
    }

op LDADDB(A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldadd%sb %s, %s, [%s]", getAcquireLoadVariante(A,R), get32Reg(Rs), get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 0 1 1 1 0 0 0 %1b %1b 1 %s 0 0 0 0 0 0 %s%s", A,R,Rs.image, Rn.image, Rt.image)
    action = {
    }

op LDADDH(A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldadd%sh %s, %s, [%s]", getAcquireLoadVariante(A,R), get32Reg(Rs), get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 1 1 1 1 0 0 0 %1b %1b 1 %s 0 0 0 0 0 0 %s%s", A,R,Rs.image, Rn.image, Rt.image)
    action = {
    }

op LDADD(sf:u1, A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldadd%s %s, %s, [%s]", getAcquireLoadVariante(A,R), get32o64Reg(sf, Rs), get32o64Reg(sf, Rt), get64RegoSP(Rn))
    image = format("1 %1b 1 1 1 0 0 0 %1b %1b 1 %s 0 0 0 0 0 0 %s%s", sf, A,R,Rs.image, Rn.image, Rt.image)
    action = {
    }

op LDAPR(sf:u1, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldapr %s, [%s]", get32o64Reg(sf, Rt), get64RegoSP(Rn))
    image = format("1 %1b 1 1 1 0 0 0 1 0 1 1 1 1 1 1 1 1 0 0 0 0 %s%s", sf, Rn.image, Rt.image)
    action = {
    }

op LDAPRB(Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldaprb %s, [%s]", get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 0 1 1 1 0 0 0 1 0 1 1 1 1 1 1 1 1 0 0 0 0 %s%s", Rn.image, Rt.image)
    action = {
    }

op LDAPRH(Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldaprh %s, [%s]", get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 1 1 1 1 0 0 0 1 0 1 1 1 1 1 1 1 1 0 0 0 0 %s%s", Rn.image, Rt.image)
    action = {
    }

op LDAPUR(sf:u1, imm9:u9, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldapur %s, [%s, #%d]", get32o64Reg(sf,Rt), get64RegoSP(Rn), imm9)
    image = format("1 %1b 0 1 1 0 0 1 0 1 0 %9b 00 %s%s", sf, imm9, Rn.image, Rt.image)
    action = {
    }

op LDAPURB(imm9:u9, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldapurb %s, [%s, #%d]", get32Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("0 0 0 1 1 0 0 1 0 1 0 %9b 0 0 %s%s", imm9, Rn.image, Rt.image)
    action = {
    }

op LDAPURH(imm9:u9, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldapurh %s, [%s, #%d]", get32Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("0 1 0 1 1 0 0 1 0 1 0 %9b 00 %s%s", imm9, Rn.image, Rt.image)
    action = {
    }

op LDAPURSB(opc:u1, imm9:u9, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldapursb %s, [%s, #%d]", get32o64Reg(opc==0, Rt), get64RegoSP(Rn), imm9)
    image = format("0 0 0 1 1 0 0 1 1 %1b 0 %9b 00 %s%s", opc, imm9, Rn.image, Rt.image)
    action = {
    }

op LDAPURSH(opc:u1, imm9:u9, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldapursh %s, [%s, #%d]", get32o64Reg(opc==0,Rt), get64RegoSP(Rn), imm9)
    image = format("0 1 0 1 1 0 0 1 1 %1b 0 %9b 00 %s%s", opc, imm9, Rn.image, Rt.image)
    action = {
    }

op LDAPURSW(imm9:u9, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldapursw %s, [%s, #%d]", get32Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("1 0 0 1 1 0 0 1 1 0 0 %9b 00 %s%s", imm9, Rn.image, Rt.image)
    action = {
    }

op LDAR(sf:u1, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldar %s, [%s]", get32o64Reg(sf, Rt), get64RegoSP(Rn))
    image = format("1 %1b 0 0 1 0 0 0 1 1 0 1 1 1 1 1 1 1 1 1 1 1 %s%s", sf, Rn.image, Rt.image)
    action = {
    }

op LDARB(Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldarb %s, [%s]", get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 0 0 0 1 0 0 0 1 1 0 1 1 1 1 1 1 11 1 1 1 %s%s", Rn.image, Rt.image)
    action = {
    }


op LDARH(Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldarh %s, [%s]", get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 1 0 0 1 0 0 0 1 1 0 1 1 1 1 1 1 11 1 1 1%s%s", Rn.image, Rt.image)
    action = {
    }

op LDAXP(sf:u1, Rn:REG_INDEX, Rt:REG_INDEX, Rt2:REG_INDEX)
    syntax = format("ldaxp %s, %s, [%s]", get32o64Reg(sf, Rt), get32o64Reg(sf, Rt2), get64RegoSP(Rn))
    image = format("1 %1b 0 0 1 0 0 0 0 1 11 1 1 1 1 1 %s%s%s", sf, Rt2.image, Rn.image, Rt.image)
    action = {
    }

op LDAXR(sf:u1, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldaxr %s, [%s]", get32o64Reg(sf, Rt), get64RegoSP(Rn))
    image = format("1 %1b 0 0 1 0 0 0 0 1 0 1 1 1 1 1 1 1 1 1 1 1 %s%s", sf, Rn.image, Rt.image)
    action = {
    }

op LDAXRB(Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldaxrb %s, [%s]", get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 0 0 0 1 0 0 0 0 1 0 1 1 11 1 1 1 1 1 1 1%s%s", Rn.image, Rt.image)
    action = {
    }

op LDAXRH(Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldaxrh %s, [%s]", get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 1 0 0 1 0 0 0 0 1 0 1 1 11 1 1 1 1 1 1 1%s%s", Rn.image, Rt.image)
    action = {
    }

op LDCLRB(A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldclr%sb %s,%s,[%s]", getAcquireLoadVariante(A,R), get32Reg(Rs), get32Reg(Rt), get64RegoSP(Rt))
    image = format("0 0 1 1 1 0 0 0 %1b %1b 1 %s 0 0 0 1 0 0 %s%s", A, R, Rs.image, Rn.image, Rt.image)
    action = {
    }

op LDCLRH(A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldclr%sh %s,%s,[%s]", getAcquireLoadVariante(A,R), get32Reg(Rs), get32Reg(Rt), get64RegoSP(Rt))
    image = format("0 1 1 1 1 0 0 0 %1b %1b 1 %s 0 0 0 1 0 0 %s%s", A, R, Rs.image, Rn.image, Rt.image)
    action = {
    }

op LDCLR(sf:u1, A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldclr%s %s,%s,[%s]", getAcquireLoadVariante(A,R), get32o64Reg(sf, Rs), get32o64Reg(sf, Rt), get64RegoSP(Rt))
    image = format("1 %1b 1 1 1 0 0 0 %1b %1b 1 %s 0 0 0 1 0 0 %s%s", sf, A, R, Rs.image, Rn.image, Rt.image)
    action = {
    }

op LDEORB(A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldeor%sb %s,%s,[%s]", getAcquireLoadVariante(A,R), get32Reg(Rs), get32Reg(Rt), get64RegoSP(Rt))
    image = format("0 0 1 1 1 0 0 0 %1b %1b 1 %s 0 0 1 0 0 0 %s%s", A, R, Rs.image, Rn.image, Rt.image)
    action = {
    }

op LDEORH(A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldeor%sh %s,%s,[%s]", getAcquireLoadVariante(A,R), get32Reg(Rs), get32Reg(Rt), get64RegoSP(Rt))
    image = format("0 1 1 1 1 0 0 0 %1b %1b 1 %s 0 0 1 0 0 0 %s%s", A, R, Rs.image, Rn.image, Rt.image)
    action = {
    }

op LDEOR(sf:u1, A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldeor%s %s,%s,[%s]", getAcquireLoadVariante(A,R), get32o64Reg(sf, Rs), get32o64Reg(sf, Rt), get64RegoSP(Rt))
    image = format("1 %1b 1 1 1 0 0 0 %1b %1b 1 %s 0 0 1 0 0 0 %s%s", sf, A, R, Rs.image, Rn.image, Rt.image)
    action = {
    }

op LDG(imm9:u9, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldg %s, [%s,#%d]", get64Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("1 1 0 1 1 0 0 1 0 1 1 %9b 00 %s%s", imm9, Rn.image, Rt.image)
    action = {
    }

op LDGM(Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldgm %s, [%s]", get64Reg(Rt), get64RegoSP(Rn))
    image = format("1 1 0 1 1 0 0 1 1 1 1 0 0 0 0 0 0 0 0 0 0 0 %s%s", Rn.image, Rt.image)
    action = {
    }

op LDLARB(Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldlarb %s, [%s]", get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 0 0 0 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 %s%s", Rn.image, Rt.image)
    action = {
    }

op LDLARH(Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldlarh %s, [%s]", get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 1 0 0 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 %s%s", Rn.image, Rt.image)
    action = {
    }

op LDLAR(sf:u1, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldlar %s, [%s]", get32o64Reg(sf, Rt), get64RegoSP(Rn))
    image = format("1 %1b 0 0 1 0 0 0 1 1 0 1 1 1 1 1 0 1 1 1 1 1 %s%s", sf, Rn.image, Rt.image)
    action = {
    }

op LDNP(sf:u1, imm7:u7, Rt2:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldnp %s, %s, [%s,#%d]", get32o64Reg(sf, Rt), get32o64Reg(sf, Rt2), get64RegoSP(Rn), imm7)
    image = format("%1b 0 1 0 1 0 0 0 0 1 %7b %s %s %s", sf, imm7, Rt2.image, Rn.image, Rt.image)
    action = {
    }

op LDP_postindex(sf:u1, imm7:u7, Rt2:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldp %s, %s, [%s,#%d]", get32o64Reg(sf, Rt), get32o64Reg(sf, Rt2), get64RegoSP(Rn), imm7)
    image = format("%1b 0 1 0 1 0 0 0 1 1 %7b %s %s %s", sf, imm7, Rt2.image, Rn.image, Rt.image)
    action = {
    }

op LDP_preindex(sf:u1, imm7:u7, Rt2:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldp %s, %s, [%s,#%d]!", get32o64Reg(sf, Rt), get32o64Reg(sf, Rt2), get64RegoSP(Rn), imm7)
    image = format("%1b 0 1 0 1 0 0 1 1 1 %7b %s %s %s", sf, imm7, Rt2.image, Rn.image, Rt.image)
    action = {
    }
    
op LDP_signedoffset(sf:u1, imm7:s7, Rt2:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldp %s, %s, [%s,#%d]", get32o64Reg(sf, Rt), get32o64Reg(sf, Rt2), get64RegoSP(Rn), imm7)
    image = format("%1b 0 1 0 1 0 0 1 0 1 %7b %s %s %s", sf, imm7, Rt2.image, Rn.image, Rt.image)
    action = {
    }

op LDPSW_postindex(imm7:u7, Rt2:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldpsw %s, %s, [%s], #%d", get64Reg(Rt), get64Reg(Rt2), get64RegoSP(Rn), imm7)
    image = format(" 0 1 1 0 1 0 0 0 1 1 %7b %s %s %s", imm7, Rt2.image, Rn.image, Rt.image)
    action = {
    }

op LDPSW_preindex(imm7:u7, Rt2:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldpsw %s, %s, [%s, #%d]!", get64Reg(Rt), get64Reg(Rt2), get64RegoSP(Rn), imm7)
    image = format(" 0 1 1 0 1 0 0 1 1 1 %7b %s %s %s", imm7, Rt2.image, Rn.image, Rt.image)
    action = {
    }

op LDPSW_signedoffset(imm7:s7, Rt2:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldpsw %s, %s, [%s, #%d]", get64Reg(Rt), get64Reg(Rt2), get64RegoSP(Rn), imm7)
    image = format(" 0 1 1 0 1 0 0 1 0 1 %7b %s %s %s", imm7, Rt2.image, Rn.image, Rt.image)
    action = {
    }

op LDR_immediate_postindex(sf:u1, imm9:s9,Rn:REG_INDEX,Rt:REG_INDEX)
    syntax = format("ldr %s, [%s], #%d", get32o64Reg(sf, Rt), get64RegoSP(Rn), imm9)
    image = format("1 %1b 1 1 1 0 0 0 0 1 0 %9b 0 1 %s %s", sf, imm9, Rn.image, Rt.image)
    action = {
    }
op LDR_immediate_preindex(sf:u1, imm9:s9,Rn:REG_INDEX,Rt:REG_INDEX)
    syntax = format("ldr %s, [%s, #%d]!", get32o64Reg(sf, Rt), get64RegoSP(Rn), imm9)
    image = format("1 %1b 1 1 1 0 0 0 0 1 0 %9b 1 1 %s %s", sf, imm9, Rn.image, Rt.image)
    action = {
    }
op LDR_immediate_unsignedoffset(sf:u1, imm12:u12,Rn:REG_INDEX,Rt:REG_INDEX)
    syntax = format("ldr %s, [%s, #%d]", get32o64Reg(sf, Rt), get64RegoSP(Rn), imm12)
    image = format("1 %1b 1 1 1 0 0 1 0 1 %12b %s %s", sf, imm12, Rn.image, Rt.image)
    action = {
    }

op LDR_literal(sf:u1, imm19:u19, Rt:REG_INDEX)
    syntax = format("ldr %s, %d", get32o64Reg(sf, Rt), imm19)
    image = format("0 %1b 0 1 1 0 0 0 %19b %s", sf, imm19, Rt.image)
    action = {
    }

op LDR_register(sf:u1, Rm:REG_INDEX, option:u3, S:u1, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldr %s, [%s, %s%s]", get32o64Reg(sf, Rt), get64RegoSP(Rn), get32o64Reg(option<0..0>, Rm), extend(option, S))
    image = format("1 %1b 1 1 1 0 0 0 0 1 1 %s %3b %1b 1 0 %s%s", sf, Rm.image, option, S, Rn.image, Rt.image)
    action = {
    }

op LDRAA(S:u1, imm9:u9, W:u1, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldraa %s, [%s, #%d]%s", get64Reg(Rt), get64RegoSP(Rn), imm9, if W == 1 then "!" else "" endif)
    image = format("1 1 1 1 1 0 0 0 0 %1b 1 %9b %1b 1 %s%s", S, imm9, W, Rn.image, Rt.image)
    action = {
    }

op LDRAB(S:u1, imm9:u9, W:u1, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldrab %s, [%s, #%d]%s", get64Reg(Rt), get64RegoSP(Rn), imm9, if W == 1 then "!" else "" endif)
    image = format("1 1 1 1 1 0 0 0 1 %1b 1 %9b %1b 1%s%s", S, imm9, W, Rn.image, Rt.image)
    action = {
    }

op LDRB_immediate_postindex(imm9:s9,Rn:REG_INDEX,Rt:REG_INDEX)
    syntax = format("ldrb %s, [%s], #%d", get32Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("0 0 1 1 1 0 0 0 0 1 0 %9b 0 1 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }
op LDRB_immediate_preindex(imm9:s9,Rn:REG_INDEX,Rt:REG_INDEX)
    syntax = format("ldrb %s, [%s, #%d]!", get32Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("0 0 1 1 1 0 0 0 0 1 0 %9b 1 1 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }
op LDRB_immediate_unsignedoffset(imm12:u12,Rn:REG_INDEX,Rt:REG_INDEX)
    syntax = format("ldrb %s, [%s, #%d]", get32Reg(Rt), get64RegoSP(Rn), imm12)
    image = format("0 0 1 1 1 0 0 1 0 1 %12b %s %s", imm12, Rn.image, Rt.image)
    action = {
    }

op LDRB_register(Rm:REG_INDEX, option:u3, S:u1, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = if option == 3 then
                format("ldrb %s, [%s, %s, LSL %d]", get32Reg(Rt), get64RegoSP(Rn), get32o64Reg(option<0..0>, Rm), S)
            else 
                format("ldrb %s, [%s, %s%s]", get32Reg(Rt), get64RegoSP(Rn), get32o64Reg(option<0..0>, Rm), extend(option, S))
            endif
    image = format("0 0 1 1 1 0 0 0 0 1 1 %s %3b %1b 1 0 %s%s", Rm.image, option, S, Rn.image, Rt.image)
    action = {
    }

op LDRH_immediate_postindex(imm9:s9,Rn:REG_INDEX,Rt:REG_INDEX)
    syntax = format("ldrh %s, [%s], #%d", get32Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("0 1 1 1 1 0 0 0 0 1 0 %9b 0 1 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }
op LDRH_immediate_preindex(imm9:s9,Rn:REG_INDEX,Rt:REG_INDEX)
    syntax = format("ldrh %s, [%s, #%d]!", get32Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("0 1 1 1 1 0 0 0 0 1 0 %9b 1 1 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }
op LDRH_immediate_unsignedoffset(imm12:u12,Rn:REG_INDEX,Rt:REG_INDEX)
    syntax = format("ldrh %s, [%s, #%d]", get32Reg(Rt), get64RegoSP(Rn), imm12)
    image = format("0 1 1 1 1 0 0 1 0 1 %12b %s %s", imm12, Rn.image, Rt.image)
    action = {
    }

op LDRH_register(Rm:REG_INDEX, option:u3, S:u1, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldrh %s, [%s, %s%s]", get32Reg(Rt), get64RegoSP(Rn), get32o64Reg(option<0..0>, Rm), extend(option, S))
    image = format("0 1 1 1 1 0 0 0 0 1 1 %s %3b %1b 1 0 %s%s", Rm.image, option, S, Rn.image, Rt.image)
    action = {
    }

op LDRSB_immediate_postindex(sf:u1, imm9:s9,Rn:REG_INDEX,Rt:REG_INDEX)
    syntax = format("ldrsb %s, [%s], #%d", get32o64Reg(sf, Rt), get64RegoSP(Rn), imm9)
    image = format("0 0 1 1 1 0 0 0 1 %1b 0 %9b 0 1 %s %s", sf, imm9, Rn.image, Rt.image)
    action = {
    }
op LDRSB_immediate_preindex(sf:u1, imm9:s9,Rn:REG_INDEX,Rt:REG_INDEX)
    syntax = format("ldrsb %s, [%s, #%d]!", get32o64Reg(sf, Rt), get64RegoSP(Rn), imm9)
    image = format("0 0 1 1 1 0 0 0 1 %1b 0 %9b 1 1 %s %s", sf, imm9, Rn.image, Rt.image)
    action = {
    }
op LDRSB_immediate_unsignedoffset(sf:u1, imm12:u12,Rn:REG_INDEX,Rt:REG_INDEX)
    syntax = format("ldrsb %s, [%s, #%d]", get32o64Reg(sf, Rt), get64RegoSP(Rn), imm12)
    image = format("0 0 1 1 1 0 0 1 1 %1b %12b %s %s", sf, imm12, Rn.image, Rt.image)
    action = {
    }

op LDRSB_register(sf:u1, Rm:REG_INDEX, option:u3, S:u1, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = if option == 3 then
                format("ldrsb %s, [%s, %s, LSL %d]", get32o64Reg(sf, Rt), get64RegoSP(Rn), get32o64Reg(option<0..0>, Rm), S)
            else 
                format("ldsb %s, [%s, %s%s]", get32o64Reg(sf, Rt), get64RegoSP(Rn), get32o64Reg(option<0..0>, Rm), extend(option, S))
            endif
    image = format("0 0 1 1 1 0 0 0 1 %1b 1 %s %3b %1b 1 0 %s%s", sf, Rm.image, option, S, Rn.image, Rt.image)
    action = {
    }

op LDRSH_immediate_postindex(sf:u1, imm9:s9,Rn:REG_INDEX,Rt:REG_INDEX)
    syntax = format("ldrsh %s, [%s], #%d", get32o64Reg(sf, Rt), get64RegoSP(Rn), imm9)
    image = format("0 1 1 1 1 0 0 0 1 %1b 0 %9b 0 1 %s %s", sf, imm9, Rn.image, Rt.image)
    action = {
    }
op LDRSH_immediate_preindex(sf:u1, imm9:s9,Rn:REG_INDEX,Rt:REG_INDEX)
    syntax = format("ldrsh %s, [%s, #%d]!", get32o64Reg(sf, Rt), get64RegoSP(Rn), imm9)
    image = format("0 1 1 1 1 0 0 0 1 %1b 0 %9b 1 1 %s %s", sf, imm9, Rn.image, Rt.image)
    action = {
    }
op LDRSH_immediate_unsignedoffset(sf:u1, imm12:u12,Rn:REG_INDEX,Rt:REG_INDEX)
    syntax = format("ldrsh %s, [%s, #%d]", get32o64Reg(sf, Rt), get64RegoSP(Rn), imm12)
    image = format("0 1 1 1 1 0 0 1 1 %1b %12b %s %s", sf, imm12, Rn.image, Rt.image)
    action = {
    }

op LDRSH_register(sf:u1, Rm:REG_INDEX, option:u3, S:u1, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldrsh %s, [%s, %s%s]", get32o64Reg(sf, Rt), get64RegoSP(Rn), get32o64Reg(option<0..0>, Rm), extend(option, S))
    image = format("0 1 1 1 1 0 0 0 1 %1b 1 %s %3b %1b 1 0 %s%s", sf, Rm.image, option, S, Rn.image, Rt.image)
    action = {
    }

op LDRSW_immediate_postindex(imm9:s9,Rn:REG_INDEX,Rt:REG_INDEX)
    syntax = format("ldrsw %s, [%s], #%d", get64Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("1 0 1 1 1 0 0 0 1 0 0 %9b 0 1 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }
op LDRSW_immediate_preindex(imm9:s9,Rn:REG_INDEX,Rt:REG_INDEX)
    syntax = format("ldrsw %s, [%s, #%d]!", get64Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("1 0 1 1 1 0 0 0 1 0 0 %9b 1 1 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }
op LDRSW_immediate_unsignedoffset(imm12:u12,Rn:REG_INDEX,Rt:REG_INDEX)
    syntax = format("ldrsw %s, [%s, #%d]", get32Reg(Rt), get64RegoSP(Rn), imm12)
    image = format("1 0 1 1 1 0 0 1 1 0 %12b %s %s", imm12, Rn.image, Rt.image)
    action = {
    }

op LDRSW_literal(imm19:u19, Rt:REG_INDEX)
    syntax = format("ldrsw %s, %d", get64Reg(Rt), imm19)
    image = format("1 0 0 1 1 0 0 0 %19b %s", imm19, Rt.image)
    action = {
    }

op LDRSW_register(Rm:REG_INDEX, option:u3, S:u1, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldrsw %s, [%s, %s%s]", get32Reg(Rt), get64RegoSP(Rn), get32o64Reg(option<0..0>, Rm), extend(option, S))
    image = format("1 0 1 1 1 0 0 0 1 0 1 %s %3b %1b 1 0 %s%s", Rm.image, option, S, Rn.image, Rt.image)
    action = {
    }


op LDTR(sf:u1, imm9:s9, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldtr %s, [%s, #%d]", get32o64Reg(sf, Rt), get64RegoSP(Rn), imm9)
    image = format("1 %1b 1 1 1 0 0 0 0 1 0 %9b 1 0 %s %s", sf, imm9, Rn.image, Rt.image)
    action = {
    }

op LDTRB(imm9:s9, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldtrb %s, [%s, #%d]", get32Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("0 0 1 1 1 0 0 0 0 1 0 %9b 1 0 %s%s", imm9, Rn.image, Rt.image)
    action = {
    }

op LDTRH(imm9:s9, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldtrh %s, [%s, #%d]", get32Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("0 1 1 1 1 0 0 0 0 1 0 %9b 1 0 %s%s", imm9, Rn.image, Rt.image)
    action = {
    }

op LDTRSB(sf:u1, imm9:s9, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldtrsb %s, [%s, #%d]", get32o64Reg(sf, Rt), get64RegoSP(Rn), imm9)
    image = format("0 0 1 1 1 0 0 0 1 %1b 0 %9b 1 0 %s %s", sf, imm9, Rn.image, Rt.image)
    action = {
    }

op LDTRSH(sf:u1, imm9:s9, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldtrsh %s, [%s, #%d]", get32o64Reg(sf, Rt), get64RegoSP(Rn), imm9)
    image = format("0 1 1 1 1 0 0 0 1 %1b 0 %9b 1 0 %s %s", sf, imm9, Rn.image, Rt.image)
    action = {
    }

op LDTRSW(imm9:s9, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldtsw %s, [%s, #%d]", get64Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("1 0 1 1 1 0 0 0 1 0 0 %9b 1 0 %s%s", imm9, Rn.image, Rt.image)
    action = {
    }

op LDUR(sf:u1, imm9:s9, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldur %s, [%s, #%d]", get32o64Reg(sf, Rt), get64RegoSP(Rn), imm9)
    image = format("1 %1b 1 1 1 0 0 0 0 1 0 %9b 0 0 %s %s", sf, imm9, Rn.image, Rt.image)
    action = {
    }

op LDURB(imm9:s9, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldurb %s, [%s, #%d]", get32Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("0 0 1 1 1 0 0 0 0 1 0 %9b 0 0 %s%s", imm9, Rn.image, Rt.image)
    action = {
    }

op LDURH(imm9:s9, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldurh %s, [%s, #%d]", get32Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("0 1 1 1 1 0 0 0 0 1 0 %9b 0 0 %s%s", imm9, Rn.image, Rt.image)
    action = {
    }

op LDURSB(sf:u1, imm9:s9, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldursb %s, [%s, #%d]", get32o64Reg(sf, Rt), get64RegoSP(Rn), imm9)
    image = format("0 0 1 1 1 0 0 0 1 %1b 0 %9b 0 0 %s %s", sf, imm9, Rn.image, Rt.image)
    action = {
    }

op LDURSH(sf:u1, imm9:s9, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldursh %s, [%s, #%d]", get32o64Reg(sf, Rt), get64RegoSP(Rn), imm9)
    image = format("0 1 1 1 1 0 0 0 1 %1b 0 %9b 0 0 %s %s", sf, imm9, Rn.image, Rt.image)
    action = {
    }


op LDURSW(imm9:s9, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldusw %s, [%s, #%d]", get64Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("1 0 1 1 1 0 0 0 1 0 0 %9b 0 0 %s%s", imm9, Rn.image, Rt.image)
    action = {
    }

op LDXP(sf:u1, Rn:REG_INDEX, Rt:REG_INDEX, Rt2:REG_INDEX)
    syntax = format("ldxp %s, %s, [%s]", get32o64Reg(sf, Rt), get32o64Reg(sf, Rt2), get64RegoSP(Rn))
    image = format("1 %1b 0 0 1 0 0 0 0 1 1 1 1 1 1 1 0 %s %s %s", sf,  Rt2.image, Rn.image, Rt.image)
    action = {
    }

op LDXR(sf:u1, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldxr %s, [%s]", get32o64Reg(sf, Rt), get64RegoSP(Rn))
    image = format("1 %1b 0 0 1 0 0 0 0 1 0 1 1 1 1 1 0 1 1 1 1 1%s %s", sf, Rn.image, Rt.image)
    action = {
    }

op LDXRB(Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldxrb %s, [%s]", get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 0 0 0 1 0 0 0 0 1 0 1 1 1 1 1 0 1 1 1 1 1 %s%s", Rn.image, Rt.image)
    action = {
    }

op LDXRH(Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldxrh %s, [%s]", get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 1 0 0 1 0 0 0 0 1 0 11 1 1 1 0 1 111 1 %s%s", Rn.image, Rt.image)
    action = {
    }

//---------------------------------------------------------------------------------------------

op loads_atomic = LDSETB | LDSETH | LDSET | LDSMAXB | LDSMAXH | LDSMAX | LDSMINB | LDSMINH | LDSMIN | LDUMAXB | LDUMAXH | LDUMAX | LDUMINB | LDUMINH | LDUMIN

op LDSETB(A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldset%sb %s, %s, [%s]", getAcquireLoadVariante(A,R), get32Reg(Rs), get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 0 1 1 1 0 0 0 %1b %1b 1 %s 0 0 1 1 0 0 %s%s", A, R, Rs.image, Rn.image, Rt.image)
    action = {
    }

op LDSETH(A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldset%sh %s, %s, [%s]", getAcquireLoadVariante(A,R), get32Reg(Rs), get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 1 1 1 1 0 0 0 %1b %1b 1 %s 0 0 1 1 0 0 %s%s", A, R, Rs.image, Rn.image, Rt.image)
    action = {
    }

op LDSET(sf:u1,A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldset%s %s, %s, [%s]", getAcquireLoadVariante(A,R), get32o64Reg(sf, Rs), get32o64Reg(sf,Rt), get64RegoSP(Rn))
    image = format("1 %1b 1 1 1 0 0 0 %1b %1b 1 %s 0 0 1 1 0 0 %s%s", sf, A, R, Rs.image, Rn.image, Rt.image)
    action = {
    }

op LDSMAXB(A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldsmax%sb %s, %s, [%s]", getAcquireLoadVariante(A,R), get32Reg(Rs), get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 0 1 1 1 0 0 0 %1b %1b 1 %s 0 1 0 0 0 0 %s%s", A, R, Rs.image, Rn.image, Rt.image)
    action = {
    }

op LDSMAXH(A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldsmax%sh %s, %s, [%s]", getAcquireLoadVariante(A,R), get32Reg(Rs), get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 1 1 1 1 0 0 0 %1b %1b 1 %s 0 1 0 0 0 0 %s%s", A, R, Rs.image, Rn.image, Rt.image)
    action = {
    }

op LDSMAX(sf:u1,A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldsmax%s %s, %s, [%s]", getAcquireLoadVariante(A,R), get32o64Reg(sf, Rs), get32o64Reg(sf,Rt), get64RegoSP(Rn))
    image = format("1 %1b 1 1 1 0 0 0 %1b %1b 1 %s 0 1 0 0 0 0 %s%s", sf, A, R, Rs.image, Rn.image, Rt.image)
    action = {
    }

op LDSMINB(A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldsmin%sb %s, %s, [%s]", getAcquireLoadVariante(A,R), get32Reg(Rs), get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 0 1 1 1 0 0 0 %1b %1b 1 %s 0 1 0 1 0 0 %s%s", A, R, Rs.image, Rn.image, Rt.image)
    action = {
    }

op LDSMINH(A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldsmin%sh %s, %s, [%s]", getAcquireLoadVariante(A,R), get32Reg(Rs), get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 1 1 1 1 0 0 0 %1b %1b 1 %s 0 1 0 1 0 0 %s%s", A, R, Rs.image, Rn.image, Rt.image)
    action = {
    }

op LDSMIN(sf:u1,A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldsmin%s %s, %s, [%s]", getAcquireLoadVariante(A,R), get32o64Reg(sf, Rs), get32o64Reg(sf,Rt), get64RegoSP(Rn))
    image = format("1 %1b 1 1 1 0 0 0 %1b %1b 1 %s 0 1 0 1 0 0 %s%s", sf, A, R, Rs.image, Rn.image, Rt.image)
    action = {
    }

op LDUMAXB(A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldumax%sb %s, %s, [%s]", getAcquireLoadVariante(A,R), get32Reg(Rs), get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 0 1 1 1 0 0 0 %1b %1b 1 %s 0 1 1 0 0 0 %s%s", A, R, Rs.image, Rn.image, Rt.image)
    action = {
    }

op LDUMAXH(A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldumax%sh %s, %s, [%s]", getAcquireLoadVariante(A,R), get32Reg(Rs), get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 1 1 1 1 0 0 0 %1b %1b 1 %s 0 1 1 0 0 0 %s%s", A, R, Rs.image, Rn.image, Rt.image)
    action = {
    }

op LDUMAX(sf:u1,A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldumax%s %s, %s, [%s]", getAcquireLoadVariante(A,R), get32o64Reg(sf, Rs), get32o64Reg(sf,Rt), get64RegoSP(Rn))
    image = format("1 %1b 1 1 1 0 0 0 %1b %1b 1 %s 0 1 1 0 0 0 %s%s", sf, A, R, Rs.image, Rn.image, Rt.image)
    action = {
    }

op LDUMINB(A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldumin%sb %s, %s, [%s]", getAcquireLoadVariante(A,R), get32Reg(Rs), get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 0 1 1 1 0 0 0 %1b %1b 1 %s 0 1 1 1 0 0 %s%s", A, R, Rs.image, Rn.image, Rt.image)
    action = {
    }

op LDUMINH(A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldumin%sh %s, %s, [%s]", getAcquireLoadVariante(A,R), get32Reg(Rs), get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 1 1 1 1 0 0 0 %1b %1b 1 %s 0 1 1 1 0 0 %s%s", A, R, Rs.image, Rn.image, Rt.image)
    action = {
    }

op LDUMIN(sf:u1,A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("ldumin%s %s, %s, [%s]", getAcquireLoadVariante(A,R), get32o64Reg(sf, Rs), get32o64Reg(sf,Rt), get64RegoSP(Rn))
    image = format("1 %1b 1 1 1 0 0 0 %1b %1b 1 %s 0 1 1 1 0 0 %s%s", sf, A, R, Rs.image, Rn.image, Rt.image)
    action = {
    }

//---------------------------------------------------------------------------------------------------

op other_mem = PRFM_immediate | PRFM_register | PRFUM | PSBCSYNC | SB | SBC | SETGE|SETGP|SETGM|SETGEN|SETGPN|SETGMN|SETGET|SETGPT|SETGMT|SETGETN|SETGPTN|SETGMTN|SETE|SETP|SETM|SETEN|SETPN|SETMN|SETET|SETPT|SETMT|SETETN|SETPTN|SETMTN | ST2G_postindex | ST2G_preindex | ST2G_signedoffset | STG_postindex | STG_preindex | STG_signedoffset | STGP_postindex | STGP_preindex | STGP_signedoffset | STR_imm_postindex | STR_imm_preindex | STR_imm_unsignedoffset | STR_reg | STP_postindex | STP_preindex | STP_signedoffset | STRB_imm_postindex | STRB_imm_preindex | STRB_imm_unsignedoffset | STRB_reg | STRH_imm_postindex | STRH_imm_preindex | STRH_imm_unsignedoffset | STRH_reg

op PRFM_immediate(imm12:u12, Rn:REG_INDEX, imm5:u5)
    syntax = format("prfm #%d,[%s,%d]", imm5, get64RegoSP(Rn), imm12)
    image = format("1 1 1 1 1 0 0 1 1 0 %12b %s %5b",  imm12, Rn.image, imm5)
    action = {
    }

op PRFM_register(Rm:REG_INDEX, option:u3, S:u1,Rn:REG_INDEX, imm5:u5)
    syntax = format("prfm ##%d, [%s,%s%s]", imm5, get64RegoSP(Rn), get32o64Reg(option<0..0>, Rm), extend(option, S))
    image = format("1 1 1 1 1 0 0 0 1 0 1 %s %3b %1b 1 0 %s %5b", Rm.image, option, S, Rn.image, imm5)
    action = {
    }

op PRFUM(imm9:u9, Rn:REG_INDEX, imm5:u5)
    syntax = format("prfum #%d, [%s,#%d]", imm5, get64RegoSP(Rn), imm5)
    image = format("1 1 1 1 1 0 0 0 1 0 0 %9b 0 0 %s %5b", imm9, Rn, imm5)
    action = {
    }

op PSBCSYNC()
    syntax = "psb csync"
    image = "1 1 0 1 0 1 0 1 0 0 0 0 0 0 1 1 0 0 1 0 0 0 1 0 0 0 1 1 1 1 1 1"
    action = {
    }

op SB()
    syntax = "sb"
    image = "1 1 0 1 0 1 0 1 0 0 0 0 0 0 1 1 0 0 1 1 0 0 0 0 1 1 1 1 1 1 1 1"
    action = {
    }

op SBC(sf:u1, Rm:REG_INDEX, Rn:REG_INDEX, Rd:REG_INDEX)
    syntax = format("sbc %s, %s, %s", get32o64Reg(sf, Rd), get32o64Reg(sf, Rn), get32o64Reg(sf, Rm))
    image = format("%1b 1 0 1 1 0 1 0 0 0 0 %s 0 0 0 0 0 0 %s %s", sf, Rm.image, Rn.image, Rd.image)
    action = {
    }

op SETGE(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("setge [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 1 1 0 %s %2b 0 0 0 1 %s%s",sz,Rs.image, 2,Rn.image,Rd.image)
    action = {
    }

op SETGP(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("setgp [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 1 1 0 %s %2b 0 0 0 1 %s%s",sz,Rs.image, 0,Rn.image,Rd.image)
    action = {
    }

op SETGM(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("setgm [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 1 1 0 %s %2b 0 0 0 1 %s%s",sz,Rs.image,1,Rn.image,Rd.image)
    action = {
    }

op SETGEN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("setgen [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 1 1 0 %s %2b 1 0 0 1 %s%s",sz,Rs.image, 2,Rn.image,Rd.image)
    action = {
    }

op SETGPN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("setgpn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 1 1 0 %s %2b 1 0 0 1 %s%s",sz,Rs.image, 0,Rn.image,Rd.image)
    action = {
    }

op SETGMN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("setgmn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 1 1 0 %s %2b 1 0 0 1 %s%s",sz,Rs.image,1,Rn.image,Rd.image)
    action = {
    }

op SETGET(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("setget [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 1 1 0 %s %2b 0 1 0 1 %s%s",sz,Rs.image, 2,Rn.image,Rd.image)
    action = {
    }

op SETGPT(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("setgpt [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 1 1 0 %s %2b 0 1 0 1 %s%s",sz,Rs.image, 0,Rn.image,Rd.image)
    action = {
    }

op SETGMT(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("setgmt [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 1 1 0 %s %2b 0 1 0 1 %s%s",sz,Rs.image,1,Rn.image,Rd.image)
    action = {
    }

op SETGETN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("setgetn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 1 1 0 %s %2b 1 1 0 1 %s%s",sz,Rs.image, 2,Rn.image,Rd.image)
    action = {
    }

op SETGPTN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("setgptn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 1 1 0 %s %2b 1 1 0 1 %s%s",sz,Rs.image, 0,Rn.image,Rd.image)
    action = {
    }

op SETGMTN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("setgmtn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 1 0 1 1 1 0 %s %2b 1 1 0 1 %s%s",sz,Rs.image,1,Rn.image,Rd.image)
    action = {
    }

op SETE(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("sete [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 1 1 0 %s %2b 0 0 0 1 %s%s",sz,Rs.image, 2,Rn.image,Rd.image)
    action = {
    }

op SETP(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("setp [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 1 1 0 %s %2b 0 0 0 1 %s%s",sz,Rs.image, 0,Rn.image,Rd.image)
    action = {
    }

op SETM(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("setm [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 1 1 0 %s %2b 0 0 0 1 %s%s",sz,Rs.image,1,Rn.image,Rd.image)
    action = {
    }

op SETEN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("seten [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 1 1 0 %s %2b 1 0 0 1 %s%s",sz,Rs.image, 2,Rn.image,Rd.image)
    action = {
    }

op SETPN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("setpn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 1 1 0 %s %2b 1 0 0 1 %s%s",sz,Rs.image, 0,Rn.image,Rd.image)
    action = {
    }

op SETMN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("setmn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 1 1 0 %s %2b 1 0 0 1 %s%s",sz,Rs.image,1,Rn.image,Rd.image)
    action = {
    }

op SETET(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("setet [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 1 1 0 %s %2b 0 1 0 1 %s%s",sz,Rs.image, 2,Rn.image,Rd.image)
    action = {
    }

op SETPT(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("setpt [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 1 1 0 %s %2b 0 1 0 1 %s%s",sz,Rs.image, 0,Rn.image,Rd.image)
    action = {
    }

op SETMT(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("setmt [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 1 1 0 %s %2b 0 1 0 1 %s%s",sz,Rs.image,1,Rn.image,Rd.image)
    action = {
    }

op SETETN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("setetn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 1 1 0 %s %2b 1 1 0 1 %s%s",sz,Rs.image, 2,Rn.image,Rd.image)
    action = {
    }

op SETPTN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("setptn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 1 1 0 %s %2b 1 1 0 1 %s%s",sz,Rs.image, 0,Rn.image,Rd.image)
    action = {
    }

op SETMTN(sz:u2, Rs:REG_INDEX,Rn:REG_INDEX,Rd:REG_INDEX)
    syntax = format("setmtn [%s]!, [%s]!, %s!", get64Reg(Rd), get64Reg(Rs), get64Reg(Rn))
    image = format("%2b 0 1 1 0 0 1 1 1 0 %s %2b 1 1 0 1 %s%s",sz,Rs.image,1,Rn.image,Rd.image)
    action = {
    }

op ST2G_postindex(imm9:s9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("st2g %s, [%s], #%d", get64RegoSP(Rt), get64RegoSP(Rn), imm9)
    image = format("1 1 0 1 1 0 0 1 1 0 1 %9b 0 1 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }

op ST2G_preindex(imm9:s9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("st2g %s, [%s, #%d]!", get64RegoSP(Rt), get64RegoSP(Rn), imm9)
    image = format("1 1 0 1 1 0 0 1 1 0 1 %9b 1 1 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }
    
op ST2G_signedoffset(imm9:s9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("st2g %s, [%s, #%d]", get64RegoSP(Rt), get64RegoSP(Rn), imm9)
    image = format("1 1 0 1 1 0 0 1 1 0 1 %9b 1 0 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }

op STG_postindex(imm9:s9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stg %s, [%s], #%d", get64RegoSP(Rt), get64RegoSP(Rn), imm9)
    image = format("1 1 0 1 1 0 0 1 0 0 1 %9b 0 1 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }

op STG_preindex(imm9:s9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stg %s, [%s, #%d]!", get64RegoSP(Rt), get64RegoSP(Rn), imm9)
    image = format("1 1 0 1 1 0 0 1 0 0 1 %9b 1 1 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }
    
op STG_signedoffset(imm9:s9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stg %s, [%s, #%d]", get64RegoSP(Rt), get64RegoSP(Rn), imm9)
    image = format("1 1 0 1 1 0 0 1 0 0 1 %9b 1 0 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }

op STGP_postindex(imm7:s7, Rt:REG_INDEX, Rt2:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stgp %s, %s, [%s], #%d", get64Reg(Rt), get64Reg(Rt2), get64RegoSP(Rn), imm7)
    image = format("0 1 1 0 1 0 0 0 1 0 %7b %s %s %s", imm7, Rt2.image, Rn.image, Rt.image)
    action = {
    }

op STGP_preindex(imm7:s7, Rt:REG_INDEX, Rt2:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stgp %s, %s, [%s, #%d]!", get64Reg(Rt), get64Reg(Rt2), get64RegoSP(Rn), imm7)
    image = format("0 1 1 0 1 0 0 1 1 0 %7b %s %s %s", imm7, Rt2.image, Rn.image, Rt.image)
    action = {
    }
    
op STGP_signedoffset(imm7:s7, Rt:REG_INDEX, Rt2:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stgp %s, %s, [%s, #%d]", get64Reg(Rt), get64Reg(Rt2), get64RegoSP(Rn), imm7)
    image = format("0 1 1 0 1 0 0 1 0 0 %7b %s %s %s", imm7, Rt2.image, Rn.image, Rt.image)
    action = {
    }

op STP_postindex(sf:u1, imm7:s7, Rt:REG_INDEX, Rt2:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stp %s, %s, [%s], #%d", get32o64Reg(sf, Rt), get32o64Reg(sf, Rt2), get64RegoSP(Rn), imm7)
    image = format("%1b 0 1 0 1 0 0 0 1 0 %7b %s %s %s", sf, imm7, Rt2.image, Rn.image, Rt.image)
    action = {
    }

op STP_preindex(sf:u1, imm7:s7, Rt:REG_INDEX, Rt2:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stp %s, %s, [%s, #%d]!", get32o64Reg(sf, Rt), get32o64Reg(sf, Rt2), get64RegoSP(Rn), imm7)
    image = format("%1b 0 1 0 1 0 0 1 1 0 %7b %s %s %s", sf, imm7, Rt2.image, Rn.image, Rt.image)
    action = {
    }
    
op STP_signedoffset(sf:u1, imm7:s7, Rt:REG_INDEX, Rt2:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stp %s, %s, [%s, #%d]", get32o64Reg(sf, Rt), get32o64Reg(sf, Rt2), get64RegoSP(Rn), imm7)
    image = format("%1b 0 1 0 1 0 0 1 0 0 %7b %s %s %s", sf, imm7, Rt2.image, Rn.image, Rt.image)
    action = {
    }

op STR_imm_postindex(sf:u1, imm9:s9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("str %s, [%s], #%d", get32o64Reg(sf, Rt), get64RegoSP(Rn), imm9)
    image = format("1 %1b 1 1 1 0 0 0 0 0 0 %9b 0 1 %s %s", sf, imm9, Rn.image, Rt.image)
    action = {
    }

op STR_imm_preindex(sf:u1, imm9:s9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("str %s, [%s, #%d]!", get32o64Reg(sf, Rt), get64RegoSP(Rn), imm9)
    image = format("1 %1b 1 1 1 0 0 0 0 0 0 %9b 1 1 %s %s", sf, imm9, Rn.image, Rt.image)
    action = {
    }
    
op STR_imm_unsignedoffset(sf:u1, imm12:u12, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("str %s, [%s, #%d]", get32o64Reg(sf, Rt), get64RegoSP(Rn), imm12)
    image = format("1 %1b 1 1 1 0 0 1 0 0 %12b %s %s", sf, imm12, Rn.image, Rt.image)
    action = {
    }

op STR_reg(sf:u1, Rm:REG_INDEX, option:u3, S:u1, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("str %s, [%s, %s%s]", get32o64Reg(sf, Rt), get64RegoSP(Rn), get32o64Reg(option<0..0>, Rm), extend(option, S))
    image = format("1 %1b 1 1 1 0 0 0 0 0 1 %s %3b %1b 1 0 %s%s", sf, Rm.image, option, S, Rn.image, Rt.image)
    action = {
    }

op STRB_imm_postindex(imm9:s9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("strb %s, [%s], #%d", get32Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("0 0 1 1 1 0 0 0 0 0 0 %9b 0 1 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }

op STRB_imm_preindex(imm9:s9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("strb %s, [%s, #%d]!", get64Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("0 0 1 1 1 0 0 0 0 0 0 %9b 1 1 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }
    
op STRB_imm_unsignedoffset(imm12:u12, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("strb %s, [%s, #%d]", get32Reg(Rt), get64RegoSP(Rn), imm12)
    image = format("0 0 1 1 1 0 0 1 0 0 %12b %s %s", imm12, Rn.image, Rt.image)
    action = {
    }

op STRB_reg(Rm:REG_INDEX, option:u3, S:u1, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("strb %s, [%s, %s%s]", get32Reg(Rt), get64RegoSP(Rn), get32o64Reg(option<0..0>, Rm), extend(option, S))
    image = format("0 0 1 1 1 0 0 0 0 0 1 %s %3b %1b 1 0 %s%s", Rm.image, option, S, Rn.image, Rt.image)
    action = {
    }

op STRH_imm_postindex(imm9:s9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("strh %s, [%s], #%d", get32Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("0 1 1 1 1 0 0 0 0 0 0 %9b 0 1 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }

op STRH_imm_preindex(imm9:s9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("strh %s, [%s, #%d]!", get64Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("0 1 1 1 1 0 0 0 0 0 0 %9b 1 1 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }
    
op STRH_imm_unsignedoffset(imm12:u12, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("strh %s, [%s, #%d]", get32Reg(Rt), get64RegoSP(Rn), imm12)
    image = format("0 1 1 1 1 0 0 1 0 0 %12b %s %s", imm12, Rn.image, Rt.image)
    action = {
    }

op STRH_reg(Rm:REG_INDEX, option:u3, S:u1, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("strh %s, [%s, %s%s]", get32Reg(Rt), get64RegoSP(Rn), get32o64Reg(option<0..0>, Rm), extend(option, S))
    image = format("0 1 1 1 1 0 0 0 0 0 1 %s %3b %1b 1 0 %s%s", Rm.image, option, S, Rn.image, Rt.image)
    action = {
    }

//----------------------------------------------------------------------------------------

op store_atomics =  ST64B | ST64BV | ST64BV0 | STGP | STLLRB | STLLRH | STLLR | STLRB | STLRH | STLR | STLURB | STLURH | STLUR | STLXP | STLXRB | STLXRH | STLXR | STNP | STTR | STTRB | STTRH | STUR | STURB | STURH | STXP | STXR | STXRB | STXRH | STZ2G_postindex | STZ2G_preindex | STZ2G_signedoffset | STZG_postindex | STZG_preindex | STZG_signedoffset | STZGM | SWP | SWPB | SWPH

op ST64B(Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("st64b %s, [%s]", get64Reg(Rt), get64RegoSP(Rn))
    image = format("1 1 1 1 1 0 0 0 0 0 1 1 1 1 1 1 1 0 0 1 0 0 %s%s", Rn.image, Rt.image)
    action = {
    }

op ST64BV(Rt:REG_INDEX, Rn:REG_INDEX, Rs:REG_INDEX)
    syntax = format("st64bv %s, %s, [%s]", get64Reg(Rs), get64Reg(Rt), get64RegoSP(Rn))
    image = format("1 1 1 1 1 0 0 0 0 0 1 %s 1 0 1 1 0 0 %s%s", Rs.image, Rn.image,Rt.image)
    action = {
    }

op ST64BV0(Rt:REG_INDEX, Rn:REG_INDEX, Rs:REG_INDEX)
    syntax = format("st64bv0 %s, %s, [%s]", get64Reg(Rs), get64Reg(Rt), get64RegoSP(Rn))
    image = format("1 1 1 1 1 0 0 0 0 0 1 %s 1 0 1 0 0 0 %s%s", Rs.image, Rn.image,Rt.image)
    action = {
    }

op STGP(Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stgm %s, [%s]", get64Reg(Rt), get64RegoSP(Rn))
    image = format("1 1 0 1 1 0 0 1 1 0 1 0 0 0 0 0 0 0 0 0 0 0 %s %s", Rn.image, Rt.image)
    action = {
    }

op STLLRB(Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stllrb %s, [%s]", get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 0 0 0 1 0 0 0 1 0 0 1 1 1 1 1 0 1 1 1 1 1 %s %s", Rn.image, Rt.image)
    action = {
    }

op STLLRH(Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stllrh %s, [%s]", get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 1 0 1 1 1 1 1 %s %s", Rn.image, Rt.image)
    action = {
    }

op STLLR(sf:u1, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stllr %s, [%s]", get32Reg(Rt), get64RegoSP(Rn))
    image = format("1 %1b 0 0 1 0 0 0 1 0 0 1 1 1 1 1 0 1 1 1 1 1 %s %s", sf, Rn.image, Rt.image)
    action = {
    }

op STLRB(Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stlrb %s, [%s]", get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 0 0 0 1 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 %s %s", Rn.image, Rt.image)
    action = {
    }

op STLRH(Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stlrh %s, [%s]", get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 1 0 0 1 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 %s %s", Rn.image, Rt.image)
    action = {
    }

op STLR(sf:u1, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stlr %s, [%s]", get32o64Reg(sf, Rt), get64RegoSP(Rn))
    image = format("1 %1b 0 0 1 0 0 0 1 0 0 1 1 1 1 1 1 1 1 1 1 1 %s %s", sf, Rn.image, Rt.image)
    action = {
    }

op STLURB( imm9:u9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stlurb %s, [%s, #%d]", get32Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("0 0 0 1 1 0 0 1 0 0 0 %9b 0 0 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }

op STLURH( imm9:u9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stlurh %s, [%s, #%d]", get32Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("0 1 0 1 1 0 0 1 0 0 0 %9b 0 0 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }

op STLUR(sf:u1, imm9:u9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stlur %s, [%s, #%d]", get32o64Reg(sf, Rt), get64RegoSP(Rn), imm9)
    image = format("1 %1b 0 1 1 0 0 1 0 0 0 %9b 0 0 %s %s", sf, imm9, Rn.image, Rt.image)
    action = {
    }

op STLXP(sf:u1, Rs:REG_INDEX, Rt:REG_INDEX, Rt2:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stlxp %s, %s, %s, [%s]", get32o64Reg(sf,Rs), get32o64Reg(sf, Rt), get32o64Reg(sf, Rt2), get64RegoSP(Rn))
    image = format("1 %1b 0 0 1 0 0 0 0 0 1 %s 1 %s %s %s", sf, Rs.image, Rt2.image, Rn.image, Rt.image)
    action = {
    }

op STLXRB(Rs:REG_INDEX, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stlxrb %s, %s, [%s]", get32Reg(Rs), get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 0 0 0 1 0 0 0 0 0 0 %s 1 1 1 1 1 1 %s %s", Rs.image, Rn.image, Rt.image)
    action = {
    }

op STLXRH(Rs:REG_INDEX, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stlxrh %s, %s, [%s]", get32Reg(Rt), get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 1 0 0 1 0 0 0 0 0 0 %s 1 1 1 1 1 1 %s %s", Rs.image, Rn.image, Rt.image)
    action = {
    }

op STLXR(sf:u1, Rs:REG_INDEX, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stlxr %s, %s, [%s]", get32o64Reg(sf, Rs), get32o64Reg(sf, Rt), get64RegoSP(Rn))
    image = format("1 %1b 0 0 1 0 0 0 0 0 0 %s 1 1 1 1 1 1 %s %s", sf, Rs.image, Rn.image, Rt.image)
    action = {
    }

op STNP(sf:u1, imm7:u7, Rt2:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("stnp %s, %s, [%s, #%d]", get32o64Reg(sf, Rt), get32o64Reg(sf, Rt2), get64RegoSP(Rn), imm7)
    image = format("%1b 0 1 0 1 0 0 0 0 0 %7b %s %s %s", sf, imm7, Rt2.image, Rn.image, Rt.image)
    action = {
    }

op STTRB( imm9:u9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("sttrb %s, [%s, #%d]", get32Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("0 0 1 1 1 0 0 0 0 0 0 %9b 1 0 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }

op STTRH( imm9:u9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("sttrh %s, [%s, #%d]", get32Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("0 1 1 1 1 0 0 0 0 0 0 %9b 1 0 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }

op STTR(sf:u1, imm9:u9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("sttr %s, [%s, #%d]", get32o64Reg(sf, Rt), get64RegoSP(Rn), imm9)
    image = format("1 %1b 1 1 1 0 0 0 0 0 0 %9b 1 0 %s %s", sf, imm9, Rn.image, Rt.image)
    action = {
    }

op STURB( imm9:u9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("sturb %s, [%s, #%d]", get32Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("0 0 1 1 1 0 0 0 0 0 0 %9b 0 0 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }

op STURH( imm9:u9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("sturh %s, [%s, #%d]", get32Reg(Rt), get64RegoSP(Rn), imm9)
    image = format("0 1 1 1 1 0 0 0 0 0 0 %9b 0 0 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }

op STUR(sf:u1, imm9:u9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stur %s, [%s, #%d]", get32o64Reg(sf, Rt), get64RegoSP(Rn), imm9)
    image = format("1 %1b 1 1 1 0 0 0 0 0 0 %9b 0 0 %s %s", sf, imm9, Rn.image, Rt.image)
    action = {
    }

op STXP(sf:u1, Rs:REG_INDEX, Rt:REG_INDEX, Rt2:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stxp %s, %s, %s, [%s]", get32o64Reg(sf,Rs), get32o64Reg(sf, Rt), get32o64Reg(sf, Rt2), get64RegoSP(Rn))
    image = format("1 %1b 0 0 1 0 0 0 0 0 1 %s 0 %s %s %s", sf, Rs.image, Rt2.image, Rn.image, Rt.image)
    action = {
    }

op STXRB(Rs:REG_INDEX, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stxrb %s, %s, [%s]", get32Reg(Rs), get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 0 0 0 1 0 0 0 0 0 0 %s 0 1 1 1 1 1 %s %s", Rs.image, Rn.image, Rt.image)
    action = {
    }

op STXRH(Rs:REG_INDEX, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stxrh %s, %s, [%s]", get32Reg(Rt), get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 1 0 0 1 0 0 0 0 0 0 %s 0 1 1 1 1 1 %s %s", Rs.image, Rn.image, Rt.image)
    action = {
    }

op STXR(sf:u1, Rs:REG_INDEX, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stxr %s, %s, [%s]", get32o64Reg(sf, Rs), get32o64Reg(sf, Rt), get64RegoSP(Rn))
    image = format("1 %1b 0 0 1 0 0 0 0 0 0 %s 0 1 1 1 1 1 %s %s", sf, Rs.image, Rn.image, Rt.image)
    action = {
    }

op STZ2G_postindex( imm9:s9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stz2g %s, [%s], #%d", get64RegoSP(Rt), get64RegoSP(Rn), imm9)
    image = format("1 1 0 1 1 0 0 1 1 1 1 %9b 0 1 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }

op STZ2G_preindex( imm9:s9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stz2g %s, [%s, #%d]!", get64RegoSP(Rt), get64RegoSP(Rn), imm9)
    image = format("1 1 0 1 1 0 0 1 1 1 1 %9b 1 1 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }

op STZ2G_signedoffset(imm9:s9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stz2g %s, [%s, #%d]", get64RegoSP(Rt), get64RegoSP(Rn), imm9)
    image = format("1 1 0 1 1 0 0 1 1 1 1 %9b 1 0 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }

op STZG_postindex( imm9:s9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stzg %s, [%s], #%d", get64RegoSP(Rt), get64RegoSP(Rn), imm9)
    image = format("1 1 0 1 1 0 0 1 0 1 1 %9b 0 1 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }

op STZG_preindex( imm9:s9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stzg %s, [%s, #%d]!", get64RegoSP(Rt), get64RegoSP(Rn), imm9)
    image = format("1 1 0 1 1 0 0 1 0 1 1 %9b 1 1 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }

op STZG_signedoffset(imm9:s9, Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stzg %s, [%s, #%d]", get64RegoSP(Rt), get64RegoSP(Rn), imm9)
    image = format("1 1 0 1 1 0 0 1 0 1 1 %9b 1 0 %s %s", imm9, Rn.image, Rt.image)
    action = {
    }

op STZGM(Rt:REG_INDEX, Rn:REG_INDEX)
    syntax = format("stzgm %s, [%s]", get64Reg(Rt), get64RegoSP(Rn))
    image = format("1 1 0 1 1 0 0 1 0 0 1 0 0 0 0 0 0 0 0 0 0 0 %s%s", Rn.image, Rt.image)
    action = {
    }

op SWPB(A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("swp%sb %s, %s, [%s]", getAcquireLoadVariante(A,R), get32Reg(Rs), get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 0 1 1 1 0 0 0 %1b %1b 1 %s 1 0 0 0 0 0 %s%s", A,R,Rs.image, Rn.image, Rt.image)
    action = {
    }

op SWPH(A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("swp%sh %s, %s, [%s]", getAcquireLoadVariante(A,R), get32Reg(Rs), get32Reg(Rt), get64RegoSP(Rn))
    image = format("0 1 1 1 1 0 0 0 %1b %1b 1 %s 1 0 0 0 0 0 %s%s", A,R,Rs.image, Rn.image, Rt.image)
    action = {
    }

op SWP(sf:u1, A:u1, R:u1, Rs:REG_INDEX, Rn:REG_INDEX, Rt:REG_INDEX)
    syntax = format("swp%s %s, %s, [%s]", getAcquireLoadVariante(A,R), get32o64Reg(sf, Rs), get32o64Reg(sf, Rt), get64RegoSP(Rn))
    image = format("1 %1b 1 1 1 0 0 0 %1b %1b 1 %s 1 0 0 0 0 0 %s%s", sf, A,R,Rs.image, Rn.image, Rt.image)
    action = {
    }


























