///////////////////////////////////////////
// TYPES DEFINITIONS
///////////////////////////////////////////


// basic signed types
type s128 = int(128)
type s64 = int(64)
type s32 = int(32)
type s31 = int(31)
type s30 = int(30)
type s29 = int(29)
type s28 = int(28)
type s27 = int(27)
type s26 = int(26)
type s25 = int(25)
type s24 = int(24)
type s23 = int(23)
type s22 = int(22)
type s21 = int(21)
type s20 = int(20)
type s19 = int(19)
type s18 = int(18)
type s17 = int(17)
type s16 = int(16)
type s15 = int(15)
type s14 = int(14)
type s13 = int(13)
type s12 = int(12)
type s11 = int(11)
type s10  = int(10)
type s9  = int(9)
type s8  = int(8)
type s7  = int(7)
type s6  = int(6)
type s5  = int(5)
type s4  = int(4)
type s3  = int(3)
type s2  = int(2)
type s1  = int(1)

type u1    = card(1)
type u2    = card(2)
type u3    = card(3)
type u4    = card(4)
type u5    = card(5)
type u6    = card(6)
type u7    = card(7)
type u8    = card(8)
type u9    = card(9)
type u10    = card(10)
type u11   = card(11)
type u12   = card(12)
type u13   = card(13)
type u14   = card(14)
type u15   = card(15)
type u16   = card(16)
type u17   = card(17)
type u18   = card(18)
type u19   = card(19)
type u20   = card(20)
type u21   = card(21)
type u22   = card(22)
type u23   = card(23)
type u24   = card(24)
type u25   = card(25)
type u26   = card(26)
type u27   = card(27)
type u28   = card(28)
type u29   = card(29)
type u30   = card(30)
type u31   = card(31)
type u32   = card(32)
type u64 = card(64)
type u128 = card(128)
type u256 = card(256)
type u2048 = card(2048)

type address_t = int(64)
type doublefp = float(52, 12)
type singlefp = float(23, 9)
type halffp = float(6, 10)

// Macro types
mode IMM26(n: s26) = n
	syntax = format("%d", n << 2)
	image  = format("%26b", n)

mode IMM24(n: s24) = n
	syntax = format("%d", n << 2)
	image  = format("%24b", n)

mode IMM19(n: s19) = n
	syntax = format("%d", n << 2)
	image  = format("%19b", n)

mode IMM3(n: s3) = n
	syntax = format("%d", n)
	image = format("%3b", n)

mode UIMM3(n: u3) = n
	syntax = format("%d", n)
	image = format("%3b", n)

mode UIMM1(n: u1) = n
	syntax = format("%d", n)
	image = format("%1b", n)

mode OFFSET_12(n: u12) = n
	syntax = format("#%d", n)
	image = format("%12b", n)

// Type Casting
macro UInt(v)			=	coerce(card(32), v)
macro UInt64(v)			=	coerce(card(64), v)
macro SInt(v)			=	coerce(int(32), v)

// value computation
macro Align(x, n)		=	((x) & ~(n - 1))
macro ZeroExtend(v, n) 	=	coerce(card(n), v)
macro SignExtend(s, n)  = coerce(int(n), s)

macro imm_concat(hi, lo, losize) = ((hi << losize) | lo)
